---

- name: "launching container (ansible < 2.10)"
  docker_container:
    name: "{{ item.name }}"
    hostname: "{{ item.name }}"
    image: "{{ item.image }}"
    capabilities: "{{ item.capabilities | default(omit) }}"
    command: "{{ item.command | default(omit) }}"
    comparisons:
      # '*': ignore
      image: strict   # don't restart containers with older versions of the image
      env: strict     # we want precisely this environment
      labels: ignore
    cpu_period: "{{ item.cpu_period | default(omit) }}"
    cpu_quota: "{{ item.cpu_quota | default(omit) }}"
    cpu_shares: "{{ item.cpu_shares | default(omit) }}"
    cpus: "{{ item.cpus | default(omit) }}"
    cpuset_cpus: "{{ item.cpuset_cpus | default(omit) }}"
    cpuset_mems: "{{ item.cpuset_mems | default(omit) }}"
    devices: "{{ item.devices | default(omit) }}"
    dns_servers: "{{ item.dns_servers | default(omit) }}"
    env_file: "{{ container_env_directory }}/{{ item.name }}/container.env"
    etc_hosts: "{{ item.etc_hosts | default(omit) }}"
    exposed_ports: "{{ item.exposed_ports | default(omit) }}"
    healthcheck: "{{ item.healthcheck | default(omit) }}"
    kernel_memory: "{{ item.kernel_memory | default(omit) }}"
    labels: "{{ item.labels | default({}) }}"
    links: "{{ item.links | default(omit) }}"
    log_driver: "{{ item.log_driver | default('json-file') }}"
    log_options: "{{ item.log_options | default({}) }}"
    memory: "{{ item.memory | default(omit) }}"
    memory_reservation: "{{ item.memory_reservation | default(omit) }}"
    memory_swap: "{{ item.memory_swap | default(omit) }}"
    memory_swappiness: "{{ item.memory_swappiness | default(omit) }}"
    mounts: "{{ item.mounts | default([]) | remove_source_handling }}"
    network_mode: "{{ item.network_mode | default('bridge') }}"
    # ansible 2.10
    # container_default_behavior: "compatibility"
    networks: "{{ item.networks | default(omit) }}"
    networks_cli_compatible: true
    output_logs: true
    privileged: "{{ item.privileged | default(omit) }}"
    published_ports: "{{ item.published_ports | default(omit) }}"
    recreate: "{{ item.recreate | default(omit) }}"  # <==  RESTARTS container after EVERY ansible run
    restart: "{{ item.restart | default(omit) }}"
    restart_policy: "{{ item.restart_policy | default('on-failure') }}"
    state: "{{ item.state | default('started') }}"
    ulimits: "{{ item.ulimits | default(omit) }}"
    volumes: "{{ item.volumes | default([]) | remove_custom_fields }}"
  register: create_container_instances
  with_items: "{{ container }}"
  loop_control:
    label: "{{ item.name }} - hostname: {{ item.name }} - image: {{ item.image }}"
  when: "ansible_version.full is version_compare('2.10', '<')"

- name: "launching container (ansible >= 2.10)"
  docker_container:
    name: "{{ item.name }}"
    hostname: "{{ item.name }}"
    image: "{{ item.image }}"
    capabilities: "{{ item.capabilities | default(omit) }}"
    command: "{{ item.command | default(omit) }}"
    comparisons:
      # '*': ignore
      image: strict   # don't restart containers with older versions of the image
      env: strict     # we want precisely this environment
      labels: ignore
    container_default_behavior: "compatibility"
    cpu_period: "{{ item.cpu_period | default(omit) }}"
    cpu_quota: "{{ item.cpu_quota | default(omit) }}"
    cpu_shares: "{{ item.cpu_shares | default(omit) }}"
    cpus: "{{ item.cpus | default(omit) }}"
    cpuset_cpus: "{{ item.cpuset_cpus | default(omit) }}"
    cpuset_mems: "{{ item.cpuset_mems | default(omit) }}"
    devices: "{{ item.devices | default(omit) }}"
    dns_servers: "{{ item.dns_servers | default(omit) }}"
    env_file: "{{ container_env_directory }}/{{ item.name }}/container.env"
    etc_hosts: "{{ item.etc_hosts | default(omit) }}"
    exposed_ports: "{{ item.exposed_ports | default(omit) }}"
    healthcheck: "{{ item.healthcheck | default(omit) }}"
    kernel_memory: "{{ item.kernel_memory | default(omit) }}"
    labels: "{{ item.labels | default({}) }}"
    links: "{{ item.links | default(omit) }}"
    log_driver: "{{ item.log_driver | default('json-file') }}"
    log_options: "{{ item.log_options | default({}) }}"
    memory: "{{ item.memory | default(omit) }}"
    memory_reservation: "{{ item.memory_reservation | default(omit) }}"
    memory_swap: "{{ item.memory_swap | default(omit) }}"
    memory_swappiness: "{{ item.memory_swappiness | default(omit) }}"
    mounts: "{{ item.mounts | default([]) | remove_source_handling }}"
    network_mode: "{{ item.network_mode | default('bridge') }}"
    networks: "{{ item.networks | default(omit) }}"
    networks_cli_compatible: true
    output_logs: true
    privileged: "{{ item.privileged | default(omit) }}"
    published_ports: "{{ item.published_ports | default(omit) }}"
    recreate: "{{ item.recreate | default(omit) }}"  # <==  RESTARTS container after EVERY ansible run
    restart: "{{ item.restart | default(omit) }}"
    restart_policy: "{{ item.restart_policy | default('on-failure') }}"
    state: "{{ item.state | default('started') }}"
    ulimits: "{{ item.ulimits | default(omit) }}"
    volumes: "{{ item.volumes | default([]) | remove_custom_fields }}"
  register: create_container_instances
  with_items: "{{ container }}"
  loop_control:
    label: "{{ item.name }} - hostname: {{ item.name }} - image: {{ item.image }}"
  when: "ansible_version.full is version_compare('2.10', '>=')"

- name: reporting changes
  debug:
    msg: "{{ create_container_instances.results | selectattr('changed', 'equalto', True) | reporting }}"
  when:
    - container_reporting_changes

...
